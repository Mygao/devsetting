#!/bin/bash

set -e

DEPENDENCIES_DONE=

if [ ! $ROOT ];then
    if [ ! -d 'configurations' ];then
        ROOT=$(pwd)/..
    else
        ROOT=$(pwd)
    fi
fi

PWD=$(pwd)
echo "Dependencies installation.. pwd: $PWD, root: $ROOT"

if [ $(echo $OSTYPE | grep 'linux') ]; then
	PKG_LIST="build-essential \
		cmake \
		libncurses5-dev \
		cscope \
		ctags \
		unzip \
		pkg-config \
		autoconf \
		automake \
		dh-autoreconf \
		autotools-dev \
		debhelper \
		libconfuse-dev \
        libssl-dev \
        libcurl4-openssl-dev \
        libexpat1-dev \
        openssh-server \
        asciidoc \
        xmlto \
        docbook2x \
		"
	sudo apt update
	sudo apt install $PKG_LIST

    ENVFILE="$HOME/.bashrc"
elif [ $(echo $OSTYPE | grep 'darwin') ]; then
    set +e
    which -s brew
    if [ $? != 0 ];then
        /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    else
        brew update
    fi
    PKG_LIST="cmake \
        ncurses \
        cscope \
        ctags \
        unzip \
        pkg-config \
        autoconf \
        automake \
        confuse \
        coreutils \
        curl \
        openssl \
        expat \
        openssh \
        gettext \
        asciidoc \
        xmlto \
        docbook2x \
        "
    for pkg in $PKG_LIST;do
        version=`brew ls --versions $pkg`
        if [ $? -eq 1 ];then
            PKG_I+="$pkg "
            echo "Cannot find $pkg"
        else
            PKG_U+="$pkg "
            echo "Found $version"
        fi
    done
    if [ "$PKG_I" ];then
        brew install $PKG_I
    fi
    if [ "$PKG_U" ];then
        brew upgrade $PKG_U
    fi

    brew link --force gettext

    set -e
    
    if ! grep -q "alias ctags" "$HOME/.bash_profile" ;then
	    echo 'alias ctags="`brew --prefix`/bin/ctags"' >> ~/.bash_profile
    fi
    ENVFILE="$HOME/.bash_profile"
fi

if ! grep -q "devsetting" "$ENVFILE" ;then
    echo '#auto generated by devsetting' >> $ENVFILE
    echo 'export PATH=$HOME/.local/bin:$HOME/bin:$PATH' >> $ENVFILE
    echo 'export TERM="xterm-256color"' >> $ENVFILE
    echo 'alias ls="ls --color=auto"' >> $ENVFILE
    echo 'alias ll="ls -alF --color=auto"' >> $ENVFILE
    echo 'alias l="ls -l"' >> $ENVFILE
fi
source $ENVFILE

DEPENDENCIES_DONE=1

